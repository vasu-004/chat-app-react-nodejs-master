name: Deploy React App to S3 + CloudFront (Docker Compose)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # ✅ Install Docker + Docker Compose (already available in ubuntu-latest)
      - name: Verify Docker and Compose
        run: |
          docker --version
          docker compose version

      # ✅ Build React app with Docker Compose (using --no-cache as requested)
      - name: Build React App using Docker Compose
        run: |
          docker compose build --no-cache

      # ✅ Start containers to ensure build process completes
      - name: Start containers for build
        run: |
          docker compose up -d
          sleep 30  # Wait for build to complete
          docker compose down

      # ✅ Extract build artifacts from Docker image
      - name: Copy build files
        run: |
          # Create a temporary container from the built image
          CONTAINER_ID=$(docker create react-app:latest)
          # Copy the build folder from container to host
          docker cp $CONTAINER_ID:/app/build ./extracted-build
          docker rm $CONTAINER_ID
          # Verify the build files
          ls -la extracted-build/

      # ✅ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ✅ Create S3 bucket (static or dynamic)
      - name: Create S3 bucket
        run: |
          # Use a consistent bucket name or generate unique one
          BUCKET_NAME="${{ secrets.S3_BUCKET_NAME }}"
          if [ -z "$BUCKET_NAME" ]; then
            BUCKET_NAME="my-react-app-${{ github.run_id }}"
          fi
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
          
          # Check if bucket exists, create if it doesn't
          if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            aws s3api create-bucket \
              --bucket "$BUCKET_NAME" \
              --region ${{ secrets.AWS_REGION }} \
              --create-bucket-configuration LocationConstraint=${{ secrets.AWS_REGION }}
          fi

      # ✅ Upload build to S3
      - name: Upload build to S3
        run: |
          aws s3 sync ./extracted-build/ s3://$BUCKET_NAME --delete

      # ✅ Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        if: env.CLOUDFRONT_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      # ✅ Cleanup Docker resources
      - name: Cleanup Docker
        run: |
          docker compose down --rmi all --volumes
